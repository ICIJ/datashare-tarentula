version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.6
        environment:
          - "TEST_ELASTICSEARCH_URL=http://elasticsearch:9200"
          - "TEST_DATASHARE_URL=http://datashare:8080"
      - name: datashare
        image: icij/datashare:6.3.6
      - name: elasticsearch
        image: docker.elastic.co/elasticsearch/elasticsearch:6.3.0
        environment:
          - "http.host=0.0.0.0"
          - "transport.host=0.0.0.0"
          - "cluster.name=datashare"
          - "discovery.type=single-node"
          - "discovery.zen.minimum_master_nodes=1"
          - "xpack.license.self_generated.type=basic"
          - "http.cors.enabled=true"
          - "http.cors.allow-origin=*"
          - "http.cors.allow-methods=OPTIONS, HEAD, GET, POST, PUT, DELETE"
          - "cluster.routing.allocation.disk.threshold_enabled=true"
          - "cluster.routing.allocation.disk.watermark.flood_stage=5gb"
          - "cluster.routing.allocation.disk.watermark.low=30gb"
          - "cluster.routing.allocation.disk.watermark.high=20gb"

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: Install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0

      - run:
          name: Wait for Elasticsearch and Datashare
          command: dockerize -wait tcp://datashare:8080 -wait tcp://elasticsearch:9200 -timeout 1m

      - run:
          name: Install dependencies
          command: |
            sudo apt install pipenv
            make install


      - run:
          name: Run tests
          command: |
            . venv/bin/activate
            pipenv run nosetests
